# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: easyblog-ci

on:
  push:
    branches: 
      - "master"

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ''
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  LOG_BASE_DIR: '/data/easyblog/logs'
  JAR_FILE_PATH: './easyblog-web/target/easyblog-web-1.0.0.jar'
  SERVER_PORT: '8001'

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 8
      uses: actions/setup-java@v3
      with:
        java-version: '8'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn -B clean package --file pom.xml
    - name: Build the Docker image
      run: docker build . --file Dockerfile --build-arg LOG_BASE_DIR="${{env.LOG_BASE_DIR}}" --build-arg JAR_FILE_PATH="${{env.JAR_FILE_PATH}}" --build-arg SERVER_PORT="${{env.SERVER_PORT}}" --tag ${{env.IMAGE_NAME}}
    - name: echo
      run: echo $GITHUB_REF_NAME
      
    # 登录  
    - name: Log into registry ${{ env.REGISTRY }}
      uses: docker/login-action@v2.2.0
      with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
    # Extract metadata (tags, labels) for Docker
    # https://github.com/docker/metadata-action
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v4.6.0
      with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}
            # tag event
            type=ref,enable=true,priority=600,prefix=,suffix=,event=tag
            
    # 推送
    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
